image: docker:latest
services:
  - docker:dind

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GIT_STRATEGY: clone
  DOCKER_DRIVER: overlay
  
stages:
  - build
  - package
  - deploy

before_script:
  - echo `pwd`
  - echo Starting CI $CI_PROJECT_NAME@$CI_COMMIT_SHORT_SHA...
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export PATH=`pwd`/.gradle/nodejs/node-v10.14.1-linux-x64/bin:$PATH
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

build-gradle:
  image: gradle:slim
  stage: build
  script:
    - ./gradlew --full-stacktrace stage
  only:
    - master
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

build-docker:
  image: gradle:slim
  stage: build
  script:
    - ./gradlew --full-stacktrace unpackBootJar
  only:
    - master
  artifacts:
    paths:
      - align-ws/build/

deploy-docker-hub:
  stage: deploy
  script:
    - cd align-ws
    - echo $DH_REGISTRY_PASSWORD | docker login $DH_REGISTRY -u $DH_REGISTRY_USER --password-stdin
    - docker build -t "$DH_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$DH_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - master
    